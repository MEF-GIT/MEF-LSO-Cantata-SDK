---
"$schema": http://json-schema.org/draft-07/schema#
title: 
    MEF LSO Sonata - Carrier Ethernet Class of Service (Common) Product Specification
    # MEF Forum - Date: 20201222  Edit-level: 178
    # File: json-format/epl/common/carrierEthernetClassOfService.yaml
definitions:
    CosFromEp:
        type: object
        description:  >-
            Ingress CoS is specified as {F,M,P}. This is when F=OVC_EP
            or EVC_EP as appropriate.
        properties:
            mapType:
                description: The field that indicates CoS = EVC/OVC EP.
                type: string
                enum:
                    - "ENDPOINT"
            map_M:
                description: The single CoS at this EVC/OVC EP
                # See additional validation notes in the manual
                type: string
            l2cp_P:
                description: This specifies the CoS for L2CPs carried over the EVC/OVC.
                type: object
                $ref: "#/definitions/CosL2cp"
        required:
            - mapType
            - map_M
            - l2cp_P
    CosFromCtagPcp:
        type: object
        description:  >-
            Ingress CoS is specified as {F,M,P}. This is when F=C_TAG_PCP.
            This maps each of the 8 PCP values in the C-tag to a Class of Service
            Name. It also maps UNTAGGED frames to a Class of Service Name.
        properties:
            mapType:
                description: The Field that indicates CoS is C-Tag PCP.
                type: string
                enum:
                    - "C_TAG_PCP"
            map_M:
                description:  >-
                    This maps each of the possible C-tag PCP values (0-7) and Untagged
                    to a specific Class of Service.
                type: array 
                minItems: 9
                maxItems: 9
                uniqueItems: TRUE
                items:
                    type: object
                    $ref: "#/definitions/CosUniPcpMapEntry"
            l2cp_P:
                description: This specifies the CoS for L2CPs carried over the OVC.
                type: object
                $ref: "#/definitions/CosL2cp"
        required:
            - mapType
            - map_M
            - l2cp_P
    CosUniPcpMapEntry:
        type: object
        description: 2-tuple {PCP, CoSName} that maps a CoS Name or DISCARD to a PCP.
        properties:
            pcpVal:
                description: A value 0 to 7
                type: string
                enum:
                    - "0"
                    - "1"
                    - "2"
                    - "3"
                    - "4"
                    - "5"
                    - "6"
                    - "7"
                    - "UNTAGGED"
            pcpCosName:
                description: A CoS Name or DISCARD
                # See additional validation notes in the manual
                type: string
        required:
            - pcpVal
            - pcpCosName
    CosFromStagPcp:
        type: object
        description:  >-
            Ingress CoS is specified as {F,M,P}. This is when F=S_TAG_PCP.
            This maps each of the 8 PCP values in the S-tag to a Class of Service
            Name.
        properties:
            mapType:
                description: The Field that indicates CoS is S-Tag PCP.
                type: string
                enum:
                    - "S_TAG_PCP"
            map_M:
                description: A list of 8 PCP values and their associated CoS Names
                type: array 
                minItems: 8
                maxItems: 8
                uniqueItems: TRUE
                items:
                    type: object
                    $ref: "#/definitions/CosEnniPcpMapEntry"
            l2cp_P:
                description: This specifies the CoS for L2CPs carried over the OVC.
                # See additional validation notes in the manual
                type: object
                $ref: "#/definitions/CosL2cp"
        required:
            - mapType
            - map_M
            - l2cp_P
    CosEnniPcpMapEntry:
        type: object
        description: 2-tuple {PCP, CoSName} that maps a CoS Name or DISCARD to a PCP.
        properties:
            pcpVal:
                type: string
                enum:
                    - "0"
                    - "1"
                    - "2"
                    - "3"
                    - "4"
                    - "5"
                    - "6"
                    - "7"
            pcpCosName:
                type: string
        required:
            - pcpVal
            - pcpCosName
    CosFromDscp:
        type: object
        description:  >-
            Ingress CoS is specified as {F,M,P}. This is when F=DSCP. This
            maps groups of DSCP values (independently for ipV4 and ipV6) to
            a Class of Service. It also provides a Class of Service mapping
            for DSCP values that are not specified and for frames that do not
            contain IP Packets.
        properties:
            mapType:
                description: The Field that indicates CoS is DSCP.
                type: string
                enum:
                    - "DSCP"
            map_M:
                description:  >-
                    This maps CoS values to a list of DSCP values for each of IPv4
                    and IPv6 and also to non-IP packets.
                type: object
                $ref: "#/definitions/CosDscpMap"
            l2cp_P:
                description: This specifies the CoS for L2CPs carried over the OVC.
                type: object
                $ref: "#/definitions/CosL2cp"
        required:
            - mapType
            - map_M
            - l2cp_P
    CosDscpMap:
        type: object
        description:  >-
            This is a list of CoS to DSCP Map Entries followed by items
            for Not an IP Packet and All Other Values.
        properties:
            dscpValueCoSList:
                description:  >-
                    This is a list of DSCP to CoS Map Entries: {ipv4DSCPs, ipv6DSCPs,
                    CoSName}
                type: array 
                minItems: 0
                uniqueItems: TRUE
                items:
                    type: object
                    $ref: "#/definitions/CosDscpMapEntry"
            otherIPv4:
                description:  >-
                    This is the CoS value for IPv4 packets with DSCP values other
                    than those listed.
                type: string
            otherIPv6:
                description:  >-
                    This is the CoS value for IPv6 packets with DSCP values other
                    than those listed.
                type: string
            notIP:
                description:  >-
                    This is the CoS value for packets that are not IP packets when
                    CoS is determined from DSCP
                type: string
        required:
            - dscpValueCoSList
            - otherIPv4
            - otherIPv6
            - notIP
    CosDscpMapEntry:
        type: object
        description: This is a 3-tuple {ipv4list, ipv6list, cosName}
        properties:
            ipv4List:
                description: List of IPv4 DSCP values
                type: object
                $ref: "#/definitions/DscpValues"
            ipv6List:
                type: object
                $ref: "#/definitions/DscpValues"
            cosName:
                type: string
        required:
            - cosName
    DscpValues:
        type: object
        description: A list of 6 bit values
        properties:
            dscpValues:
                description: A list of unique 6-bit (0-63) values
                type: array 
                minItems: 1
                uniqueItems: TRUE
                items:
                    type: integer
                    minimum: 0
                    maximum: 63
    CosL2cp:
        type: object
        description: 2-tuple {L2CP Ident, CoS Name}
        properties:
            l2cpIdentifier:
                description: MEF 45.1 ยง8.2 - Protocol Identifier
                type: object
                $ref: "../common/carrierEthernetL2cp.yaml#/definitions/L2cpProtocol"
            l2cpCosName:
                description: CoS Name String to associate with the L2CP
                type: string
        required:
            - l2cpIdentifier
            - l2cpCosName

