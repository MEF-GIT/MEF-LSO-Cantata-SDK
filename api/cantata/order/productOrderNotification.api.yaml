swagger: "2.0"
info:
  description: >+
    **This specification represents MEF work in progress and is subject to change.** 
    
    This is the API to manage notification for ProductOrder.
    This API must be deployed on notification subscriber side (buyer side / listener).

    Product Order Notification API uses TMF 622 v4.0.0 as template."
  version: 1.0.0-RC
  title: Product Order Notification
  x-logo:
    url: /redoc/logo.png
    backgroundColor: "#FFFFFF"
host: serverRoot
basePath: /mefApi/cantata/productOrderNotification/v1/
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: Notification listeners
  description: >
      The Seller's endpoint to send particular event types notifications to.
paths:
  /listener/productOrderCreateEvent:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "productOrderCreateEvent"
      summary: "Product order creation notification endpoint"
      description: "This endpoint is used to receive notifications on Product Order creation"
      deprecated: false
      parameters:
      - name: "productOrderCreateEvent"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/ProductOrderEvent"
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /listener/productOrderStateChangeEvent:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "productOrderStateChangeEvent"
      summary: "Product order state change notification endpoint"
      description: "This endpoint is used to receive notifications on Product Order state change"
      deprecated: false
      parameters:
      - name: "productOrderStateChangeEvent"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/ProductOrderEvent"
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /listener/productOrderExpectedCompletionDateSet:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "productOrderExpectedCompletionDateSet"
      summary: "Product Order Expected Completion Date Set notification endpoint"
      description: "This endpoint is used to receive notifications on Product Order Expected Completion Date Set"
      deprecated: false
      parameters:
      - name: "productOrderExpectedCompletionDateSet"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/ProductOrderEvent"
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /listener/productOrderItemExpectedCompletionDateSet:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "productOrderItemExpectedCompletionDateSet"
      summary: "Product Order Item Expected Completion Date Set notification endpoint"
      description: "This endpoint is used to receive notifications on Product Order Item Expected Completion Date Set"
      deprecated: false
      parameters:
      - name: "productOrderItemExpectedCompletionDateSet"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/ProductOrderEvent"
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /listener/cancelProductOrderCreateEvent:
    post:
      operationId: cancelProductOrderCreateEvent
      summary: Client listener for Cancel Product Order Create Event
      description: Example of a client listener for receiving the notification CancelProductOrderCreateEvent
      tags:
        - Notification listeners
      parameters:
        - name: cancelProductOrderCreateEvent
          required: true
          in: body
          description: The event data
          schema:
            $ref: '#/definitions/CancelProductOrderEvent'
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /listener/cancelProductOrderStateChangeEvent:
    post:
      operationId: cancelProductOrderStateChangeEvent
      summary: Client listener for entity Cancel Product Order State Change Event
      description: Example of a client listener for receiving the notification CancelProductOrderStateChangeEvent
      tags:
        - Notification listeners
      parameters:
        - name: cancelProductOrderStateChangeEvent
          required: true
          in: body
          description: The event data
          schema:
            $ref: '#/definitions/CancelProductOrderEvent'
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
definitions:
  ProductOrderEventType:
    description: Indicates the type of product order event.
    type: "string"
    enum:
    - productOrderCreateEvent
    - productOrderStateChangeEvent
    - productOrderExpectedCompletionDateSet
    - productOrderItemExpectedCompletionDateSet
  CancelProductOrderEventType:
    description: Indicates the type of cancel product order event.
    type: "string"
    enum:
    - cancelProductOrderCreateEvent
    - cancelProductOrderStateChangeEvent
  ProductOrderEventPayload:
    description: The identifier of the Product Order and/or Order Item being subject of this event.
    required:
      - id
    type: object
    properties:
      id:
        description: ID of the Product Order
        type: string
      href:
        description: Hyperlink to access the Product Order
        type: string
      orderItemId:
        description: ID of the Product Order Item (within the Product Order) which state change triggered the event
        type: string
      buyerId:
        description: >-
          The unique identifier of the organization that is acting as the
          a Buyer. MUST be specified in the request only when the responding 
          represents more than one Buyer.
        
          Reference: MEF 79 (Sn 8.8)
        type: string
      sellerId:
        description: >-
          The unique identifier of the organization that is acting as the
          Seller. MUST be specified in the request only when requester entity 
          represents more than one Seller.

          Reference: MEF 79 (Sn 8.8)
        type: string
  CancelProductOrderEventPayload:
    description: The identifier of the Cancel Product Order being subject of this event.
    required:
      - id
    type: object
    properties:
      id:
        description: ID of the Cancel Product Order
        type: string
      href:
        description: Hyperlink to access the Cancel Product Order
        type: string
      buyerId:
        description: >-
          The unique identifier of the organization that is acting as the
          a Buyer. MUST be specified in the request only when the responding 
          represents more than one Buyer.
        
          Reference: MEF 79 (Sn 8.8)
        type: string
      sellerId:
        description: >-
          The unique identifier of the organization that is acting as the
          Seller. MUST be specified in the request only when requester entity 
          represents more than one Seller.

          Reference: MEF 79 (Sn 8.8)
        type: string
  Event:
    description: "Event class is used to describe information structure used for notification."
    required:
    - "eventId"
    - "eventTime"
    type: "object"
    properties:
      eventId:
        type: "string"
        description: Id of the event
      eventTime:
        type: "string"
        format: "date-time"
        description: Date-time when the event occurred
  CancelProductOrderEvent:
    allOf:
    - $ref: "#/definitions/Event"
    - type: object
      required:
        - "eventType"
        - "event"
      properties:
        eventType:
          $ref: "#/definitions/CancelProductOrderEventType"
          description: >
            Indicates the type of the event.
        event:
          $ref: "#/definitions/CancelProductOrderEventPayload"
          description: >
            A reference to the object that is source of the notification.
  ProductOrderEvent:
    allOf:
    - $ref: "#/definitions/Event"
    - type: object
      required:
        - "eventType"
        - "event"
      properties:
        eventType:
          $ref: "#/definitions/ProductOrderEventType"
          description: >
            Indicates the type of the event.
        event:
          $ref: "#/definitions/ProductOrderEventPayload"
          description: >
            A reference to the Product Order that is source of the notification.
  Error:
    type: object
    required:
      - reason
    properties:
      message:
        type: string
        description: >-
          Text that provide mode details and corrective actions related to the
          error. This can be shown to a client user.
      reason:
        type: string
        description: >-
          Text that explains the reason for error. This can be shown to a
          client user.
        maxLength: 255
      referenceError:
        type: string
        format: uri
        description: url pointing to documentation describing the error
    description: >
      Standard Class used to describe API response error

      Not intended to be use directly. The `code` in the HTTP header is used as
      a discriminator for the type of error returned in runtime.
  Error400:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingQueryParameter: The URI is missing a required query-string parameter
              - missingQueryValue: The URI is missing a required query-string parameter value
              - invalidQuery: The query section of the URI is invalid.
              - invalidBody: The request has an invalid body
            enum:
              - missingQueryParameter
              - missingQueryValue
              - invalidQuery
              - invalidBody
    description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
  Error401:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingCredentials: No credentials provided.
              - invalidCredentials: Provided credentials are invalid or expired 
            enum:
              - missingCredentials
              - invalidCredentials
    description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
  Error403:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              This code indicates that the server understood
              the request but refuses to authorize it because
              of one of the following error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            enum:
              - accessDenied
              - forbiddenRequester
              - tooManyUsers
    description: Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
  Error408:
    description: |-
      Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - timeOut: Request Time-out - indicates that the server did not receive a complete request message within the time that it was prepared to wait.
            type: string
            enum:
             - timeOut
  Error500:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request. 
            enum:
              - internalError
    description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)