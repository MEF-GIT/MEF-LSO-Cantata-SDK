swagger: '2.0'
info:
  title: Product Ordering Management
  description: >+
    **This specification represents MEF work in progress and is subject to
    change.** 

    The scope of this API  introduces the following capabilities to the API:

    - Install order: request for new product - Change Order: change an existing
    Product - Disconnect Order: disconnect an existing Product - Cancel Order:
    cancellation of an inflight-order - Support for Order Notifications - The
    Buyer can also retrieve a single, or set of Product Orders based upon a
    specified filter.  

    Following feature will be introduced in next release: - Amend Order:
    modification of an inflight-order

    Product Order API uses TMF 622 v4.0.0 as template."
  version: 1.0.0-RC
host: serverRoot
basePath: /mefApi/cantata/productOrderingManagement/v1/
schemes:
  - https
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
tags:
  - name: productOrder
  - name: cancelProductOrder
  - name: events subscription
paths:
  /productOrder:
    get:
      operationId: listProductOrder
      summary: List or find ProductOrder objects
      description: This operation list or find ProductOrder entities
      tags:
        - productOrder
      parameters:
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
        - name: state
          required: false
          in: query
          description: The status of the order
          type: string
        - name: orderDate.gt
          required: false
          in: query
          description: Date when the order was created greater than
          type: string
          format: date-time
        - name: orderDate.lt
          required: false
          in: query
          description: Date when the order was created lesser than
          type: string
          format: date-time
        - name: completionDate.gt
          required: false
          in: query
          description: Effective completion date greater than
          type: string
          format: date-time
        - name: completionDate.lt
          required: false
          in: query
          description: Effective completion date lesser than
          type: string
          format: date-time
        - name: expectedCompletionDate.gt
          required: false
          in: query
          description: Seller planned completion date greater than
          type: string
          format: date-time
        - name: expectedCompletionDate.lt
          required: false
          in: query
          description: Seller planned completion date lesser than
          type: string
          format: date-time
        - name: orderCancellationDate.gt
          required: false
          in: query
          description: order cancellation date greater than
          type: string
          format: date-time
        - name: orderCancellationDate.lt
          required: false
          in: query
          description: order cancellation date lesser than
          type: string
          format: date-time
        - name: projectId
          required: false
          in: query
          description:
            An identifier that is used to group Orders that represent a unit of
            functionality that is important to a Buyer.
          type: string
        - name: externalId
          required: false
          in: query
          description:
            A number that uniquely identifies an order within the Buyer's
            enterprise.
          type: string
        - name: offset
          required: false
          in: query
          description:
            Requested index for start of resources to be provided in response
            requested by client
          type: string
        - name: limit
          required: false
          in: query
          description:
            Requested number of resources to be provided in response requested
            by client
          type: string
      responses:
        '200':
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            X-Pagination-Throttled:
              type: boolean
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
            X-Result-Count:
              type: integer
              description: The number of items included in the response
            X-Total-Count:
              type: integer
              description: >
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
          schema:
            type: array
            items:
              $ref: '#/definitions/MEFProductOrderSummary'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
    post:
      operationId: createProductOrder
      summary: Creates a ProductOrder
      description: This operation creates a ProductOrder entity.
      tags:
        - productOrder
      parameters:
        - name: productOrder
          description: The ProductOrder to be created
          required: true
          schema:
            $ref: '#/definitions/ProductOrder_Create'
          in: body
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '201':
          description:
            Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)
          schema:
            $ref: '#/definitions/ProductOrder'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '422':
          description: |-
            Unprocessable entity due to the business validation problems
          schema:
            type: array
            items:
              $ref: '#/definitions/Error422'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
  '/productOrder/{id}':
    get:
      operationId: retrieveProductOrder
      summary: Retrieves a ProductOrder by ID
      description:
        This operation retrieves a ProductOrder entity. Attribute selection is
        enabled for all first level attributes.
      tags:
        - productOrder
      parameters:
        - name: id
          description: Identifier of the ProductOrder
          required: true
          type: string
          in: path
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductOrder'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: >-
            Not Found
          schema:
            $ref: '#/definitions/Error404'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
  /cancelProductOrder:
    get:
      operationId: listCancelProductOrder
      summary: List or find CancelProductOrder objects
      description: This operation list or find CancelProductOrder entities
      tags:
        - cancelProductOrder
      parameters:
        - name: productOrderId
          required: false
          in: query
          type: string
        - name: productOrderExternalId
          required: false
          in: query
          type: string
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '200':
          description: Success
          headers:
            X-Pagination-Throttled:
              type: boolean
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
            X-Result-Count:
              type: integer
              description: The number of POQ included in the response
            X-Total-Count:
              type: integer
              description: >
                The total number of matching POQ. E.g. if there are 50 matching
                items in total, but the request has offset=10 and limit=10,
                then the X-Total-Count is 50.
          schema:
            type: array
            items:
              $ref: '#/definitions/CancelProductOrder'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error405'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
    post:
      operationId: createCancelProductOrder
      summary: Creates a CancelProductOrder
      description: This operation creates a CancelProductOrder entity.
      tags:
        - cancelProductOrder
      parameters:
        - name: cancelProductOrder
          description: The CancelProductOrder to be created
          required: true
          schema:
            $ref: '#/definitions/CancelProductOrder_Create'
          in: body
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CancelProductOrder'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error405'
        '422':
          description: |-
            Unprocessable entity due to the business validation problems
          schema:
            type: array
            items:
              $ref: '#/definitions/Error422'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
  '/cancelProductOrder/{id}':
    get:
      operationId: retrieveCancelProductOrder
      summary: Retrieves a CancelProductOrder by ID
      description:
        This operation retrieves a CancelProductOrder entity. Attribute
        selection is enabled for all first level attributes.
      tags:
        - cancelProductOrder
      parameters:
        - name: id
          description: Identifier of the CancelProductOrder
          required: true
          type: string
          in: path
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelProductOrder'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: >-
            Not Found
          schema:
            $ref: '#/definitions/Error404'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error405'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
  /hub:
    post:
      operationId: registerListener
      summary: Register a listener
      description:
        'Sets the communication endpoint address the service instance must use
        to deliver information about its health state, execution state,
        failures and metrics.'
      tags:
        - events subscription
      parameters:
        - name: data
          schema:
            $ref: '#/definitions/EventSubscriptionInput'
          required: true
          in: body
          description:
            Data containing the callback endpoint to deliver the information
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '201':
          description: Subscribed
          schema:
            $ref: '#/definitions/EventSubscription'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error405'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
  '/hub/{id}':
    get:
      operationId: retrieveHub
      summary: Retrieves a Hub by ID
      description:
        This operation retrieves a hub entity. Attribute selection is enabled
        for all first level attributes.
      tags:
        - events subscription
      parameters:
        - name: id
          description: Identifier of the Hub
          required: true
          type: string
          in: path
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSubscription'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: >-
            Not Found
          schema:
            $ref: '#/definitions/Error404'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error405'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
    delete:
      operationId: unregisterListener
      summary: Unregister a listener
      description:
        'Resets the communication endpoint address the service instance must
        use to deliver information about its health state, execution state,
        failures and metrics.'
      tags:
        - events subscription
      parameters:
        - name: id
          type: string
          required: true
          in: path
          description: The id of the registered listener
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 11.15)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 11.15)
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error404'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error405'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
definitions:
  CancelProductOrder:
    type: object
    description: Request for cancellation an existing product order
    properties:
      id:
        type: string
        description: id of the cancellation request (this is not an order id)
      href:
        type: string
        description: Hyperlink to access the cancellation request
      cancellationDeniedReason:
        type: string
        description:
          If seller denied cancellation request he could here provide reason
          for this denial of the product
      cancellationReason:
        type: string
        description: Reason why the order is cancelled.
      effectiveCancellationDate:
        type: string
        format: date-time
        description: Date when the order is cancelled.
      requestedCancellationDate:
        type: string
        format: date-time
        description: Date when the submitter wants the order to be cancelled
      productOrder:
        $ref: '#/definitions/MEFProductOrderRef'
      state:
        $ref: '#/definitions/TaskStateType'
        description:
          'Tracks the lifecycle status of the cancellation request, such as
          Acknowledged, Rejected, InProgress, Pending and so on.'
  CancelProductOrder_Create:
    type: object
    description: |-
      Request for cancellation an existing product order
      Skipped properties: id,href,state,effectiveCancellationDate
    required:
      - productOrder
    properties:
      cancellationReason:
        type: string
        description: Reason why the order is cancelled.
      requestedCancellationDate:
        type: string
        format: date-time
        description: Date when the submitter wants the order to be cancelled
      productOrder:
        $ref: '#/definitions/MEFProductOrderRef'
  Duration:
    type: object
    required:
      - amount
      - units
    description: A Duration in a given unit of time e.g. 3 hours, or 5 days.
    properties:
      amount:
        type: integer
        description: 'Duration (number of seconds, minutes, hours, etc.)'
      units:
        description: 'Time unit type'
        $ref: '#/definitions/TimeUnit'
  FieldedAddress:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - city
          - country
          - streetName
        properties:
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: Country that the address is in
          geographicSubAddress:
            $ref: '#/definitions/GeographicSubAddress'
          locality:
            type: string
            description: The locality that the address is in
          postcode:
            type: string
            description: >-
              Descriptor for a postal delivery area, used to speed and simplify
              the delivery of mail (also known as zip code)
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash
              in a US urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
          streetName:
            type: string
            description: Name of the street or other street type
          streetNr:
            type: string
            description: >-
              Number identifying a specific property on a public street. It may
              be combined with streetNrLast for ranged addresses. MEF 79
              defines it as required however as in certain countries it is not
              used we make it optional in API.
          streetNrLast:
            type: string
            description:
              Last number in a range of street numbers allocated to a property
          streetNrLastSuffix:
            type: string
            description: Last street number suffix for a ranged address
          streetNrSuffix:
            type: string
            description: The first street number suffix
          streetSuffix:
            type: string
            description: A modifier denoting a relative direction
          streetType:
            type: string
            description: >-
              The type of street (e.g., alley, avenue, boulevard, brae,
              crescent, drive, highway, lane, terrace, parade, place, tarn,
              way, wharf)
    description: >-
      A type of Address that has a discrete field and value for each type of
      boundary or identifier down to the lowest level of detail. For example
      "street number" is one field, "street name" is another field, etc.
      Reference: MEF 79 (Sn 8.9.2)
  FormattedAddress:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - addrLine1
          - city
          - country
        properties:
          addrLine1:
            type: string
            description: The first address line in a formatted address
          addrLine2:
            type: string
            description: The second address line in a formatted address
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: Country that the address is in
          locality:
            type: string
            description: >-
              An area of defined or undefined boundaries within a local
              authority or other legislatively defined area, usually rural or
              semi-rural in nature
          postcode:
            type: string
            description: >-
              Descriptor for a postal delivery area, used to speed and simplify
              the delivery of mail (also known as ZIP code)
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash
              in an US urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
    description: >-
      A type of Address that has discrete fields for each type of boundary or
      identifier with the exception of street and more specific location
      details, which are combined into a maximum of two strings based on local
      postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)
  GeographicAddressRef:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - id
        properties:
          href:
            type: string
            description: >
              Hyperlink to the referenced place Hyperlink MAY be used by the
              Seller in responses Hyperlink MUST be ignored by the Seller in
              case it is provided by the Buyer in a request
          id:
            type: string
            description: >-
              Identifier of the referenced Geographic Address. This identifier
              is assigned during a successful address validation request
              (Cantata Geographic Address Management API)
    description: >
      A reference to a Geographic Address resource available through Cantata
      Address Validation API.
  GeographicSiteRef:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - id
        properties:
          href:
            type: string
            description: >
              Hyperlink to the referenced place Hyperlink MAY be used by the
              Seller in responses Hyperlink MUST be ignored by the Seller in
              case it is provided by the Buyer in a request
          id:
            type: string
            description: >-
              Identifier of the referenced Geographic Site.
    description: >
      A reference to a Geographic Site resource available through Cantata
      Service Site API
  GeographicSubAddress:
    type: object
    properties:
      buildingName:
        type: string
        description: >
          Allows for identification of places that require building name  as
          part of addressing information
      levelNumber:
        type: string
        description:
          'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
      levelType:
        type: string
        description: Describes level types within a building
      privateStreetName:
        type: string
        description: >-
          "Private streets internal to a property (e.g. a university) may have
          internal names that are not recorded by the land title office
      privateStreetNumber:
        type: string
        description: Private streets numbers internal to a private street
      subUnit:
        type: array
        description: >-
          Representation of a MEFSubUnit It is used for describing subunit
          within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
        items:
          $ref: '#/definitions/MEFSubUnit'
    description:
      'Additional fields used to specify an address, as detailed as possible.'
  MEFBillingAccountRefOrValue:
    type: object
    description:
      References the billing arrangement that a buyer has with a seller that
      provides products to the customer.
    required:
      - id
    properties:
      id:
        type: string
        description:
          Identifies the buyer’s billing account to which the recurring and
          non-recurring charges for this order or order item will be billed.
          Required if the Buyer has more than one Billing Account with the
          Seller and for all new Product Orders.
      billingContact:
        $ref: '#/definitions/RelatedContactInformation'
        description:
          Contact allow to capture contact information. It is used to capture
          billing account contact information.
      agreementName:
        type: string
        description:
          The name of the Agreement which is referenced for the Product Order
          Item.
  MEFGeographicPoint:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - spatialRef
          - 'x'
          - 'y'
        properties:
          spatialRef:
            type: string
            description:
              The spatial reference system used to determine the coordinates
              (e.g. "WGS84"). The system used and the value of this field are
              to be agreed during the onboarding process.
          'x':
            type: string
            description:
              The latitude expressed in the format specified by the
              `spacialRef`
          'y':
            type: string
            description:
              The longitude expressed in the format specified by the
              `spacialRef`
          'z':
            type: string
            description:
              The elevation expressed in the format specified by the
              `spacialRef`
    description: >+
      A MEFGeographicPoint defines a geographic point through coordinates.
      Reference: MEF 79 (Sn 8.9.5)
  MEFItemTerm:
    type: object
    description: Item Term
    properties:
      duration:
        $ref: '#/definitions/Duration'
      rollInterval:
        $ref: '#/definitions/Duration'
      endOfTermAction:
        $ref: '#/definitions/MEFEndOfTermAction'
  MEFPricingMethod:
    type: string
    description: An enumeration of valid pricing methods for ordered items
    enum:
      - tariff
      - contract
      - individualCaseBasis
      - other
  MEFProductConfiguration:
    type: object
    required:
      - '@type'
    discriminator: '@type'
    properties:
      '@schemaLocation':
        type: string
        format: uri
        description: >-
          A URI to the JSON schema file that defines the Product Specification
          for the product that is the subject of the POQ Request.
      '@type':
        type: string
        description: >-
          The name of the type, defined in the JSON schema specified  above,
          for the product that is the subject of the POQ Request. The named
          type must be a subclass of MEFProductConfiguration.
    description: >-
      MEFProductConfiguration is used as an extension point for MEF specific
      product/service payload.  The `@type` attribute is used as a
      discriminator
  MEFProductOrderItemStateType:
    type: string
    description: |
      Possible values for the state of the Order Item

      The following mapping has been used between `MEFProductOrderItemStateType` and MEF
      57.2:

      | MEFProductOrderItemStateType | MEF 57.2                                |
      |----------------------------- | --------------------------------------- |
      | acknowledged                 | ACKNOWLEDGED                            |
      | rejected                     | REJECTED                                |
      | rejected.validated           | VALIDATED                               |
      | rejected.unassessed          | UNASSESSED                              |
      | pending                      | Not Present in MEF 57.2. Not to be used |
      | held                         | Not Present in MEF 57.2. Not to be used |
      | inProgress                   | IN_PROGRESS                             |
      | cancelled                    | CANCELLED                               |
      | completed                    | COMPLETED                               |
      | failed                       | FAILED                                  |
      | assessingCancellation        | ASSESSING_CANCELLATION                  |
      | pendingCancellation          | CANCELLING                              |
    enum:
      - acknowledged
      - rejected
      - rejected.validated
      - rejected.unassessed
      - pending
      - held
      - inProgress
      - cancelled
      - completed
      - failed
      - assessingCancellation
      - pendingCancellation
  MEFProductOrderItem_Common:
    type: object
    description: |+
      An identified part of the order. A product order is decomposed into one or more order items.
    required:
      - id
      - action
    properties:
      id:
        type: string
        description: |-
          'Identifier of the item (generally it is a sequence number 01, 02, 03, ...)' 
          MEF: A Buyer provided identifier to identify Product Order Items and to be able to relate them to one another.
          This is set by the Buyer and is unique within the Product Order. Examples of Reference Identifier could be 1, 2, 3 or A, B, C.
          The Reference Identifier can be reused in multiple Product Orders to identify a Product Order Item within that Product Order.
      endCustomerName:
        type: string
        description:
          The name of the End Customer, either a business name or an individual
          name depending on the end customer.
      expediteIndicator:
        type: boolean
        description:
          'Indicates that expedited treatment is requested and any charges
          generated in provisioning this request (e.g., additional engineering
          charges or labor charges if applicable) will be accepted by the
          Buyer.'
      pricingReference:
        type: string
        description:
          'The identifier references the previously agreed upon pricing terms,
          as applicable, based on the pricingMethod (e.g. a contract id or
          tariff id.)'
      pricingTerm:
        type: integer
        description: The length of the contract in months.
      requestedCompletionDate:
        type: string
        format: date-time
        description:
          Identifies the Buyer's desired due date (requested delivery date)
      tspRestorationPriority:
        type: string
        description:
          'Within the United States, indicates the provisioning and restoration
          priority as defined under the TSP Service Vendor Handbook, The valid
          values are defined in ATIS OBF document: ATIS-0404001.'
      action:
        $ref: '#/definitions/MEFProductActionType'
        description:
          'The action to be carried out on the Product. Can be: add, modify,
          delete.'
      billingAccount:
        $ref: '#/definitions/MEFBillingAccountRefOrValue'
        description:
          References the billing arrangement that a buyer has with a seller
          that provides products to the customer.
      coordinatedAction:
        $ref: '#/definitions/MEFOrderItemCoordinatedAction'
        description:
          The interval after the completion of one or more related Product
          Order Items that this Product Order Item can be started or completed
      pricingMethod:
        $ref: '#/definitions/MEFPricingMethod'
        description: An enumeration of valid pricing methods for ordered items.
      note:
        type: array
        items:
          $ref: '#/definitions/Note'
      product:
        $ref: '#/definitions/MEFProductRefOrValueForOrder'
        description:
          A particular Product Offering defines the technical and commercial
          attributes and behaviors of a Product.
      productOfferingQualificationItem:
        $ref: '#/definitions/ProductOfferingQualificationItemRef'
      productOrderItemRelationship:
        type: array
        items:
          $ref: '#/definitions/OrderItemRelationship'
      quoteItem:
        $ref: '#/definitions/MEFQuoteItemRef'
      relatedContactInformation:
        type: array
        description: |-
          Contact information of an individual or organization playing a role for this Order Item.
          The rule for mapping a represented attribute
          value to a `role` is to use the _lowerCamelCase_ pattern e.g.
          - Buyer Order Item Contact: `role=buyerOrderItemContact`
          - Buyer Implementation Contact: `role=buyerImplementationContact`
        items:
          $ref: '#/definitions/RelatedContactInformation'
      requestedItemTerm:
        type: array
        items:
          $ref: '#/definitions/MEFItemTerm'
          description: Requested term of the Product Order Item
  MEFProductOrderItem_Create:
    allOf:
      - $ref: '#/definitions/MEFProductOrderItem_Common'
      - type: object
        description: |+
          An identified part of the order. A product order is decomposed into one or more order items.
  MEFProductOrderRef:
    type: object
    description: Holds the MEF Product Order extension
    required:
      - id
    properties:
      id:
        type: string
        description:
          Unique (within the ordering domain) identifier for the order that is
          generated by the seller when the order is initially accepted.
      href:
        type: string
        description: Hyperlink to access the order
  MEFProductOrderStateType:
    type: string
    description: |
      Possible values for the state of the order
      The following mapping has been used between `MEFProductOrderStateType` and MEF
      57.2:

      | MEFProductOrderStateType | MEF 57.2                                |
      |------------------------- | --------------------------------------- |
      | acknowledged             | ACKNOWLEDGED                            |
      | rejected                 | REJECTED                                |
      | pending                  | Not Present in MEF 57.2. Not to be used |
      | held                     | Not Present in MEF 57.2. Not to be used |
      | inProgress               | IN_PROGRESS                             |
      | cancelled                | CANCELLED                               |
      | completed                | COMPLETED                               |
      | failed                   | FAILED                                  |
      | partial                  | PARTIAL                                 |
      | assessingCancellation    | ASSESSING_CANCELLATION                  |
      | pendingCancellation      | CANCELLING                              |
    enum:
      - acknowledged
      - rejected
      - pending
      - held
      - inProgress
      - cancelled
      - completed
      - failed
      - partial
      - assessingCancellation
      - pendingCancellation
  MEFProductRefOrValueForOrder:
    type: object
    description:
      A product is realized as one or more service(s) and / or resource(s).
    required:
      - productOffering
    properties:
      id:
        type: string
        description:
          Unique identifier of the product. Set by the Buyer if the Product
          Order Item Action is `modify` or `delete`.
      href:
        type: string
        description: Reference of the product
      buyerProductId:
        type: string
        description: Buyer identifier of the product
      place:
        type: array
        items:
          $ref: '#/definitions/RelatedPlaceRefOrValue'
        description:
          The relationships between this Product Order Item and one or more
          Places as defined in the Product Specification.
      productConfiguration:
        $ref: '#/definitions/MEFProductConfiguration'
        description: MEF extension point for product-specific attributes
      productOffering:
        $ref: '#/definitions/ProductOfferingRef'
        description:
          A particular Product Offering defines the technical and commercial
          attributes and behaviors of a Product.
      productRelationship:
        type: array
        items:
          $ref: '#/definitions/ProductRelationship'
  MEFQuoteItemRef:
    type: object
    description: It's a Quote item that has been executed previously.
    properties:
      id:
        type: string
        description: Id of an Item of a Quote
      quoteHref:
        type: string
        description: Reference of the related Quote.
      quoteId:
        type: string
        description: Unique identifier of a Quote.
    required:
      - id
      - quoteId
  MEFProductOrderStateChange:
    type: object
    description:
      'Holds the State notification reasons and associated date the State
      changed, populated by the server'
    properties:
      changeDate:
        type: string
        format: date-time
        description: The date on when the state was reached
      changeReason:
        type: string
        description: Additional comment related to state change
      state:
        description: Reached state
        $ref: '#/definitions/MEFProductOrderStateType'
  MEFProductOrderItemStateChange:
    type: object
    description:
      'Holds the State notification reasons and associated date the State
      changed, populated by the server'
    properties:
      changeDate:
        type: string
        format: date-time
        description: The date on when the state was reached
      changeReason:
        type: string
        description: Additional comment related to state change.
      state:
        description: Reached state
        $ref: '#/definitions/MEFProductOrderItemStateType'
  MEFEndOfTermAction:
    type: string
    description: The action the Seller will take once the term expires.
    enum:
      - roll
      - autoDisconnect
      - autoRenew
  MEFSubUnit:
    type: object
    required:
      - subUnitNumber
      - subUnitType
    properties:
      subUnitNumber:
        type: string
        description: >-
          The discriminator used for the subunit, often just a simple number
          but may also be a range.
      subUnitType:
        type: string
        description: >-
          The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
    description: Allows for sub unit identification
  Money:
    type: object
    description: A base / value business entity used to represent money
    properties:
      unit:
        type: string
        description:
          Currency (ISO4217 norm uses 3 letters to define the currency)
      value:
        type: number
        format: float
        description: A positive floating point number
  Note:
    type: object
    description: Extra information about a given entity
    required:
      - text
      - id
      - date
      - author
      - source
    properties:
      id:
        type: string
        description:
          'Identifier of the note within its containing entity (may or may not
          be globally unique, depending on provider implementation)'
      author:
        type: string
        description: Author of the note
      date:
        type: string
        format: date-time
        description: Date of the note
      source:
        $ref: '#/definitions/NoteSourceType'
      text:
        type: string
        description: Text of the note
  NoteSourceType:
    type: string
    description: Indicates if the note is from Buyer or Seller.
    enum:
      - buyer
      - seller
  MEFProductActionType:
    type: string
    description: |
      Action to be performed on the Product that the Order Item refers to.

      | ProductActionType | MEF 57.2   |
      |------------------ | ---------- |
      | add               | INSTALL    |
      | modify            | CHANGE     |
      | delete            | DISCONNECT |
    enum:
      - add
      - modify
      - delete
  MEFOrderItemCoordinatedAction:
    type: object
    required:
      - id
      - coordinatedActionDelay
      - coordinationDependency
    properties:
      id:
        type: string
        description:
          Id of the coordinated Order Item (must be in the same Order).
      coordinatedActionDelay:
        $ref: '#/definitions/Duration'
        description:
          The period of time for which the coordinated action is delayed.
      coordinationDependency:
        $ref: '#/definitions/MEFOrderItemCoordinationDependencyType'
        description:
          A dependency between the Product Order Item and a related Product
          Order Item
  OrderItemRelationship:
    type: object
    required:
      - id
      - relationshipType
    properties:
      id:
        type: string
        description: Id of the related Order Item (must be in the same Order).
      relationshipType:
        type: string
        description: The type of order item relationship
  MEFOrderItemCoordinationDependencyType:
    type: string
    description: |
      Possible values of the Order Item Coordination Dependency

      | OrderItemCoordinationDependencyType | MEF 57.2         |
      |------------------------------------ | ---------------- |
      | startToStart                        | START_TO_START   |
      | startToFinish                       | START_TO_FINISH  |
      | finishToStart                       | FINISH_TO_START  |
      | finishToFinish                      | FINISH_TO_FINISH |
    enum:
      - startToStart
      - startToFinish
      - finishToStart
      - finishToFinish
  OrderPrice:
    type: object
    description:
      'An amount, usually of money, that represents the actual price paid by
      the Customer for this item or this order'
    properties:
      description:
        type: string
        description:
          A narrative that explains in detail the semantics of this order item
          price.
      name:
        type: string
        description: A short descriptive name such as "Subscription price".
      priceType:
        type: string
        description:
          'A category that describes the price, such as recurring, discount,
          allowance, penalty, and so forth'
      recurringChargePeriod:
        type: string
        description: 'Could be month, week...'
      price:
        $ref: '#/definitions/Price'
        description: a structure used to define price amount
  Price:
    type: object
    description:
      'Provides all amounts (tax included, duty free, tax rate), used currency
      and percentage to apply for Price Alteration.'
    properties:
      taxRate:
        type: number
        format: float
        description: Tax rate
      dutyFreeAmount:
        $ref: '#/definitions/Money'
        description:
          All taxes excluded amount (expressed in the given currency)
      taxIncludedAmount:
        $ref: '#/definitions/Money'
        description:
          All taxes included amount (expressed in the given currency)
  ProductOfferingQualificationItemRef:
    type: object
    description:
      It's a productOfferingQualification item that has been executed
      previously.
    required:
      - id
      - productOfferingQualificationId
    properties:
      id:
        type: string
        description: Id of an item of a product offering qualification
      alternateProductProposalId:
        type: string
        description:
          A unique identifier for this Alternate Product Proposal assigned by
          the Seller.
      productOfferingQualificationHref:
        type: string
        description: Reference of the related entity.
      productOfferingQualificationId:
        type: string
        description: Unique identifier of a related entity.
  ProductOfferingRef:
    type: object
    required:
      - id
    properties:
      href:
        type: string
        description: >
          Hyperlink to a Product Offering in Sellers catalog. In case Seller is
          not providing a catalog capabilities this field is not used.  The
          catalog API definition is provided by the Seller to the Buyer during
          onboarding Hyperlink MAY be used by the Seller in responses  
          Hyperlink MUST be ignored by the Seller in case it is provided by the
          Buyer in a request
      id:
        type: string
        description: >-
          id of a Product Offering. It is assigned by the Seller. The Buyer and
          the Seller exchange information about offerings' ids during the
          onboarding process.
    description: >-
      A reference to a Product Offering offered by the Seller to the Buyer.  A
      Product Offering contains the commercial and technical details of a
      Product sold by a particular Seller. A Product Offering defines all of
      the commercial terms and, through association with a particular Product
      Specification, defines all the technical attributes and behaviors of the
      Product. A Product Offering may constrain the allowable set of
      configurable technical attributes and/or behaviors specified in the
      associated Product Specification.
  ProductOrder:
    allOf:
      - $ref: '#/definitions/ProductOrder_Common'
      - type: object
        description:
          'A Product Order is a type of order which can be used to place an
          order between a customer and a service provider or between a service
          provider and a partner and vice versa,'
        required:
          - id
          - orderDate
          - productOrderItem
          - state
        properties:
          id:
            type: string
            description: ID created on repository side (OM system)
          href:
            type: string
            description: Hyperlink to access the order
          cancellationDate:
            type: string
            format: date-time
            description:
              Identifies the date the Seller cancelled the Order. Set by Seller
              when the Order is moved to the cancelled state.
          cancellationReason:
            type: string
            description:
              An optional free-form text field for the Seller to provide
              additional information regarding the reason for the cancellation.
          completionDate:
            type: string
            format: date-time
            description:
              Identifies the date that all Product Order Items within the Order
              have reached a terminal state. No further action is permit-ted on
              the Product Order after this notification.
          expectedCompletionDate:
            type: string
            format: date-time
            description: |
              "Expected delivery date amended by the provider. MEF: MEF: Identifies the date
              the Seller expects to complete the Product Order."
          orderVersion:
            type: string
            description:
              The version of the Product Order, assigned by the Seller
          orderDate:
            type: string
            format: date-time
            description: Date when the order was created in the Seller’s system
          pricingReference:
            type: string
            description:
              'The identifier references the previously agreed upon pricing
              terms, as applicable, based on the pricingMethod (e.g. a contract
              id or tariff id.'
          productOrderItem:
            type: array
            items:
              $ref: '#/definitions/ProductOrderItem'
            minItems: 1
          state:
            $ref: '#/definitions/MEFProductOrderStateType'
            description:
              'Tracks the lifecycle status of the product order, such as
              Acknowledged, Rejected, InProgress, Pending and so on.'
          stateChange:
            type: array
            items:
              $ref: '#/definitions/MEFProductOrderStateChange'
            description: State change for the Product Order
  MEFProductOrderSummary:
    description:
      Structure to define GET without id response. A list of productOrder
      matching request criteria. Provides Product order summary view.
    required:
      - id
      - orderDate
      - state
    type: object
    properties:
      id:
        description: |-
          ID created on repository side (OM system)
          MEF: Unique identifier for the order that is generated by the Seller when the order is initially accepted via an API.
        type: string
      cancellationDate:
        type: string
        format: date-time
        description:
          Identifies the date the Seller cancelled the Order. Set by Seller
          when the Order is moved to the cancelled state.
      completionDate:
        type: string
        format: date-time
        description:
          Identifies the date that all Product Order Items within the Order
          have reached a terminal state. No further action is permit-ted on the
          Product Order after this notification.
      externalId:
        description: |-
          ID given by the consumer and only understandable by him (to facilitate his searches afterwards).
          MEF: Buyer Purchase Order Number
        type: string
      orderDate:
        description: Date when the order was created
        type: string
        format: date-time
      orderVersion:
        type: string
        description: The version of the Product Order, assignd by the Seller
      projectId:
        type: string
        description:
          An identifier that is used to group Orders that is important to the
          Buyer. A ProjectId can be used to relate multiple Orders together.
      state:
        $ref: '#/definitions/MEFProductOrderStateType'
  ProductOrder_Common:
    type: object
    description:
      A Product Order is a type of order which  can  be used to place an order
      between a customer and a service provider or between a service provider
      and a partner and vice versa,
    required:
      - relatedContactInformation
    properties:
      description:
        type: string
        description:
          Description of the product order. It is a free text for Buyer
          purpose. The Seller is not obliged to read it.
      externalId:
        type: string
        description:
          An identifier for this order within the Buyer's enterprise.
      projectId:
        type: string
        description:
          An identifier that is used to group Orders that is important to the
          Buyer. A ProjectId can be used to relate multiple Orders together.
      note:
        type: array
        items:
          $ref: '#/definitions/Note'
      relatedContactInformation:
        type: array
        description: |-
          Contact information of an individual or organization playing a role in this context.
          (e.g. Order Contact Information: role=orderContactInformation;
          Seller Contact Information: role=sellerContactInformation)
          Providing the Order Contact Information in the request is mandatory.
        items:
          $ref: '#/definitions/RelatedContactInformation'
        minItems: 1
  ProductOrder_Create:
    allOf:
      - $ref: '#/definitions/ProductOrder_Common'
      - type: object
        description: |-
          A Product Order is a type of order which  can  be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa,
          Skipped properties: id,href,completionDate,orderDate,state,stateChange,cancellationDate,cancellationReason
        required:
          - productOrderItem
        properties:
          productOrderItem:
            type: array
            items:
              $ref: '#/definitions/MEFProductOrderItem_Create'
            minItems: 1
  ProductOrderItem:
    allOf:
      - $ref: '#/definitions/MEFProductOrderItem_Common'
      - type: object
        description: |+
          An identified part of the order. A product order is decomposed into one or more order items.
        properties:
          completionDate:
            type: string
            format: date-time
            description:
              Identifies the date the Seller completed the Product Order Item.
          expectedCompletionDate:
            type: string
            format: date-time
            description: >+
              Expected delivery date amended by the provider. MEF: Identifies
              the date the Seller expects to complete the Product Order Item.
          sellerItemIdentifier:
            type: string
            description:
              A Seller provided identifier to identify the Product Order Items
              within a Product Order. This is only used when required for
              discussion between the Buyer and Seller.
          itemPrice:
            type: array
            items:
              $ref: '#/definitions/OrderPrice'
          itemTerm:
            type: array
            items:
              $ref: '#/definitions/MEFItemTerm'
              description: Term of the Product Order Item
          note:
            type: array
            items:
              $ref: '#/definitions/Note'
          requestedItemTerm:
            type: array
            items:
              $ref: '#/definitions/MEFItemTerm'
              description: Requested term of the Product Order Item
          state:
            $ref: '#/definitions/MEFProductOrderItemStateType'
            description:
              'State of the order item : described in the state machine diagram'
          stateChange:
            type: array
            items:
              $ref: '#/definitions/MEFProductOrderItemStateChange'
            description: State change for the ProductOrder Item
  ProductRelationship:
    type: object
    description:
      'Linked products to the one instantiate, such as [bundled] if the product
      is a bundle and you want to describe the bundled products inside this
      bundle; [reliesOn] if the product needs another already owned product to
      rely on (e.g. an option on an already owned mobile access product)
      [targets] or [isTargeted] (depending on the way of expressing the link)
      for any other kind of links that may be useful'
    required:
      - id
      - relationshipType
    properties:
      id:
        type: string
        description: unique identifier
      groupingKey:
        type: string
        description: >
          Related Product Identifier list is constructed from product ids
          having the same groupingKey and relationshipType.
      href:
        type: string
        description:
          Hyperlink to the product in Seller's inventory that is referenced
          Hyperlink MAY be used when providing response by the Seller Hyperlink
          MUST be ignored by the Seller in case it is provided by the Buyer in
          a request
      relationshipType:
        type: string
        description: >
          One of the relationship types defined in the Product Specification.
          For example: "relies on"
  GeographicAddressIdentifier:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - externalReferenceId
          - externalReferenceType
        properties:
          externalReferenceId:
            type: string
            description: >-
              A reference to an address by id
          externalReferenceType:
            type: string
            description: >-
              Uniquely identifies the authority that specifies the addresses
              reference and/or its type (if the authority specifies more than
              one type of address). The value(s) to be used are to be agreed
              during the onboarding. For North American providers this would
              normally be CLLI (Common Language Location Identifier) code.
    description: >-
      A unique identifier controlled by a generally accepted independent
      administrative authority that specifies a fixed geographical location. 

      Reference: MEF 79 (Sn 8.9.4)
  RelatedContactInformation:
    type: object
    required:
      - emailAddress
      - name
      - number
      - role
    properties:
      emailAddress:
        type: string
        description: Email address
      name:
        type: string
        description: Name of the contact
      number:
        type: string
        description: Phone number
      numberExtension:
        type: string
        description: Phone number extension
      organization:
        type: string
        description: The organization or company that the contact belongs to
      role:
        type: string
        description: >-
          A role the party plays in a given context.
      postalAddress:
        $ref: '#/definitions/FieldedAddress'
        description:
          'Identifies the postal address of the person or office to be
          contacted.'
    description: |
      Contact information of an individual or organization playing a role for
      this Order Item. The rule for mapping a represented attribute value to a
      `role` is to use the _lowerCamelCase_ pattern e.g. 
      - Buyer Order Item Contact: `role=buyerOrderItemContact` 
      - Buyer Implementation Contact: `role=buyerImplementationContact` 
      - Buyer Technical Contact: `role=buyerTechnicalContact`
  RelatedPlaceRefOrValue:
    type: object
    required:
      - '@type'
      - role
    discriminator: '@type'
    properties:
      '@schemaLocation':
        type: string
        format: uri
        description: >-
          A URI to a JSON-Schema file that defines additional attributes and
          relationships. May be used to define additional related place types.
          Usage of this attribute must be agreed between Buyer and Seller.
      '@type':
        type: string
        description: >
          This field is used as discriminator and is used between different
          place representations. This type might discriminate for additional
          related place as defined in '@schemaLocation'.
      role:
        type: string
        description: Role of this place
    description:
      Place defines the places where the products order must be done.
  TaskStateType:
    type: string
    description: Possible values for the state of a task
    enum:
      - accepted
      - terminatedWithError
      - inProgress
      - done
  TimeUnit:
    type: string
    description: |
      Represents a unit of time.
      Reference: MEF 57.2 (Sn 9.22.1)
    enum:
      - calendarMonths
      - calendarDays
      - calendarHours
      - calendarMinutes
      - businessDays
      - businessHours
      - businessMinutes
  EventSubscription:
    type: object
    description: The class used to register for Notifications.
    required:
      - id
      - callback
    properties:
      id:
        type: string
        description: Id of the listener
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: >-
          This attribute is used to define notification type. Example:
          ","query":”eventType = productOrderCreateEvent"}
  EventSubscriptionInput:
    type: object
    description: The class used to register for Notifications.
    required:
      - callback
    properties:
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: >-
          This attribute is used to define notification type. Example:
          ","query":”eventType = productOrderCreateEvent"}
  Error:
    description: |
      Standard Class used to describe API response error
      Not intended to be use directly only via specialization which defines a code
    type: object
    required:
      - reason
    properties:
      reason:
        type: string
        description:
          Explanation of the reason for the error which can be shown to a
          client user.
        maxLength: 255
      message:
        type: string
        description: >-
          Text that provides more details and corrective actions related to the
          error. This can be shown to a client user.
      status:
        type: string
        description: HTTP Error code extension
      referenceError:
        type: string
        format: uri
        description: URI of documentation describing the error.
  Error400:
    description: |-
      Bad Request
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - reason
          - code
        properties:
          code:
            description: |-
              List of supported error codes:
              - missingQueryParameter: Missing query-string parameter
              - missingQueryValue: Invalid query-string parameter value
              - invalidQuery: Invalid Query
              - invalidBody: Invalid body
            type: string
            enum:
              - missingQueryParameter
              - missingQueryValue
              - invalidQuery
              - invalidBody
  Error401:
    description: |-
      Unauthorized
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - reason
          - code
        properties:
          code:
            description: |-
              List of supported error codes:
              - missingCredentials: Missing credentials
              - invalidCredentials: Invalid OR expired credentials
            type: string
            enum:
              - missingCredentials
              - invalidCredentials
  Error403:
    description: |-
      Forbidden
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - reason
          - code
        properties:
          code:
            description: |-
              List of supported error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            type: string
            enum:
              - accessDenied
              - forbiddenRequester
              - tooManyUsers
  Error404:
    description: |-
      Resource for the requested path not found
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - reason
          - code
        properties:
          code:
            description: |-
              List of supported error codes:
              - notFound: Resource not found
            type: string
            enum:
              - notFound
  Error405:
    description: |-
      Method not allowed. This should be used to notify that the method is known by the origin server but not supported.
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            description: |-
              The following error code::
              - methodNotAllowed: Requested method is not supported
            type: string
            enum:
              - methodNotAllowed
  Error422:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |
              One of the following error codes:
                - missingProperty: The property the Seller has expected is not present in the payload
                - invalidValue: The property has an incorrect value
                - invalidFormat: The property value does not comply with the expected value format
                - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                - unexpectedProperty: Additional property, not expected by the Seller has been provided
                - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                - otherIssue: Other problem was identified (detailed information provided in a reason)
            enum:
              - missingProperty
              - invalidValue
              - invalidFormat
              - referenceNotFound
              - unexpectedProperty
              - tooManyRecords
              - otherIssue
          propertyPath:
            type: string
            description: >
              A pointer to a particular property of the payload that caused the
              validation issue. It is highly recommended that this property
              should be used.

              Defined using JavaScript Object Notation (JSON) Pointer
              (https://tools.ietf.org/html/rfc6901).
    description:
      Unprocessable entity due to a business validation problem.
      (https://tools.ietf.org/html/rfc4918#section-11.2)
  Error500:
    description: |-
      Internal Server Error
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - reason
          - code
        properties:
          code:
            description: |-
              List of supported error codes:
              - internalError: Internal server error
            type: string
            enum:
              - internalError
